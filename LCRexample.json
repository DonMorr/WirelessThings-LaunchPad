// sending a temp request to device MA on
{
    "type":"LLAP",
    "network":"Serial",
    "id":"MA",
    "data":["TEMP"]
}

// reply from the device
{
    "type":"LLAP",          // required, type either LLAP or LCR
    "timestamp":"12 Mar 2014 14:19:21 +0000",          // optional, always provided by the Gateway
    "network":"Serial",     // require, network source/destination, "ALL", "Serial" are current defined values
    "id":"MA",              // optional for LCR, required for LLAP, devID of device data came or sent to
    "data":["TEMP19.20"]      // required, for LLAP this is the message payload
}

// send multiple LLAP message
{
    "type":"LLAP",
    "network":"Serial",
    "id":"MA",
    "data":["TEMP", "BATT"]
}


// send multiple LLAP messages on receive of an sendOn message
{
    "type":"LLAP",
    "network":"Serial",
    "id":"MA",
    "sendOn":"AWAKE"
    "data":["WAKE", "CHDEVIDMB", "INTVL005M", "CYCLE"]
}




// basic LCR information request sent to gateway
{
    "type":"LCR",
    "network":"ALL",
    "data":{
        "id":0,
        "toQuery":[
                   {
                   "command":"APVER"
                   },
                   {
                   "command":"DTY"
                   },
                   {
                   "command":"CHDEVID"
                   }
                   ]
    }
}

// LCR reply from gateway for the above request
{
    "type":"LCR",
    "network":"Serial",
    "timestamp":"12 Mar 2014 14:19:21 +0000" ,
    "data":{
        "id":0,
        "toQuery":[
                   {
                   "command":"APVER"
                   },
                   {
                   "command":"DTY"
                   },
                   {
                   "command":"CHDEVID"
                   }
                   ],
        "replies":{
            "APVER":{
                "reply":"2.0",
                "value":""
            },
            "DTY":{
                "reply":"AAAB01",
                "value":""
            },
            "CHDEVID":{
                "reply":"??",
                "value":""
            }
        }
    }
}

// an LCR config request sent to the gateway
{
    "type":"LCR",
    "network":"ALL",
    "data":{
        "id":3,
        "devType":"AAAB01",
        "keepAwake":1,
        "toQuery":[
                   {
                   "command":"CHDEVID",
                   "value":"MA"
                   },
                   {
                   "command":"INTVL",
                   "value":"005M"
                   },
                   {
                   "command":"SLEEPM",
                   "value":"16"
                   }
                   ]
    }
    
}

// LCR reply from the gateway
{
    "type":"LCR",
    "network":"Serial",
    "timestamp":"12 Mar 2014 14:19:21 +0000",
    "data":{
        "id":3,                 // optional, can be use by GUI to help track request and replies
        "devType":"AAAB01",     // optional, if set the device type will be checked before sending any command
        "timeout":120,          // optional, time out for request, default of 120seconds used if not set via json (120 set via Server config [LCR] 'timeout'
        "keepAwake":1,          // optional, use to request or show the state of the keepAwake, 0 off, 1 on
        "state":"PASS",         // optional, use by server to show state PASS FAIL_TIMEOUT FAIL_RETRY
                                // PASS, Server things all replies are good
                                // FAIL_TIMEOUT, request returned incomplete, as timeout T expired
                                // where T is LCR timeout is specified, otherwise from Server config, [LCR] 'timeout'
                                // FAIL_RETRY, request returned incomplete, unable to get an answer to one or more questions after x retries
                                // where x retries is set via Server config [LCR] 'single_query_retry_count'
        "toQuery":[             // required, ordered list of command and value pairs to be sent to a device
                   {
                   "command":"CHDEVID", // required, LLAP command to send
                   "value":"MA"         // optional, value to combine with the command, if not set the command sent on its own
                   },
                   {
                   "command":"INTVL",   // you can including as many command/value pairs as you like or need
                   "value":"005M"
                   },
                   {
                   "command":"SLEEPM",
                   "value":"16"
                   }
                   ],
        "replies":{             // optional, responses passed back by the gateway
            "CHDEVID":{         // this is the command that was sent
                "value":"MA",   // the value that was send with the command
                "reply":"MA"    // the replay from that command
            },
            "INTVL":{           // the gateway will retry commands until it has a response for all of them
                "value":"005M",
                "reply":"005M"
            },
            "SLEEPM":{
                "value":"16",
                "reply":"016"
            }
        }
    }
    
}

// Genral call to find state of any severs
{
    "type":"Server",    // type SERVER for server status request
    "network":"ALL",     // require, network destination, "ALL" will query all servers, anything else will target a spefic server
    "data":{}           // optional, config server commands
}

// Server response from a gateway
{
    "type":"Server",    // type SERVER for server status request
    "network":"Serial",     // require, network source, "ALL", "Serial" are current defined values
    "state":"Running",  // overview state retruned by server Running, Error, Unknown
    "timestamp":"12 Mar 2014 14:19:21 +0000",          // optional, always provided by the Gateway
    "data":{           // optional, config server commands or expaneded run time info from server
            "id":3,                 // optional, can be use by GUI to help track request and replies
            "request":[             // optional, used to ask the server for information
                       "deviceStore",   // request the current device store
                       "PANID",         // request the networks PANID (used for seting up new devices ror the network)
                       "encryptionSet",  // request if encryption is enabled on the network
                       "version"        // request the servers code version
                       ],
            "set":{                 // optional, used to set settings on the server (not yet implemented)
                   "PANID":"5AA5",
                   "encryptionSet":false,
                   "encrptionKey":"0123456789ABCDEF01234567890ABCDEF"
                   },
            "result":{      // optional, results from the server to request
                      "PANID":"5AA5"        // optional, current PANID, or PANID as a result of a set
                      "encryptionSet":true, // optional, current encryptiom state
                      "encrptionKey":"Fail", // optional, Pass/Fail state for setting encryption key
                      "version":0.12,       // optional, current server version
                      "deciceStore":{       // optional, the device store contains information abbout the last message a server saw for every decice it has heard from since its last reboot, 
                                     "AA":{     // information is store by device ID, the array will not grow bigger than 656 entries
                                           "data":"TEMP19.50",      // last message seen
                                           "timestamp":"12 Mar 2014 14:19:21 +0000" // timestamp of last message
                                           },
                                      "DA":{
                                          "data":"RELAYA",
                                          "timestamp":"12 Mar 2014 14:19:21 +0000"
                                      }
                                    }
                      }
            }
}

